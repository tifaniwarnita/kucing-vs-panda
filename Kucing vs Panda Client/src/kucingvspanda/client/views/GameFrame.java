/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package kucingvspanda.client.views;

import kucingvspanda.client.controllers.*;
import javax.swing.table.*;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.ImageIcon;
import java.awt.Component;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import javax.swing.JTable;
/**
 *
 * @author ASUS X202E
 */
public class GameFrame extends javax.swing.JFrame {

    /**
     * Creates new form GameFrame
     */
    public GameFrame() {
        initLookAndFeel();
        initComponents();
        mainMenuController = new MainMenuController(this);
        roomController = mainMenuController.getRoomController();
        boardController = roomController.getBoardController();
    }
    
    public void setSocketInputOutput(ObjectInputStream in, ObjectOutputStream os) {
        getMainMenuController().setInputOutputStream(in, os);
        getRoomController().setInputOutputStream(in, os);
        getBoardController().setInputOutputStream(in, os);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        list1 = new java.awt.List();
        mainPanel = new javax.swing.JPanel();
        loginPanel = new javax.swing.JPanel();
        nicknameField = new javax.swing.JTextField();
        enterButton = new javax.swing.JButton();
        bg = new javax.swing.JLabel();
        mainMenuPanel = new javax.swing.JPanel();
        roomsLabel = new javax.swing.JLabel();
        addRoomButton = new javax.swing.JButton();
        roomsScrollPane = new javax.swing.JScrollPane();
        roomsListPanel = new javax.swing.JPanel();
        roomTable = new javax.swing.JTable();
        playButtonsPanel = new javax.swing.JPanel();
        watchButtonsPanel = new javax.swing.JPanel();
        exitButton = new javax.swing.JButton();
        gameStatusLabel = new javax.swing.JLabel();
        roomNameLabel = new javax.swing.JLabel();
        noOfPlayersLabel = new javax.swing.JLabel();
        currentPlayerLabel = new javax.swing.JLabel();
        highScoreButton = new javax.swing.JButton();
        highScorePanel = new javax.swing.JPanel();
        highScoreScrollPane = new javax.swing.JScrollPane();
        highScoreTable = new javax.swing.JTable();
        highScoreLabel = new javax.swing.JLabel();
        mainMenu2Button = new javax.swing.JButton();
        roomPanel = new javax.swing.JPanel();
        //
        boardPanel = new javax.swing.JPanel();
        boardTable = new javax.swing.JTable();
        startGameLabel = new javax.swing.JLabel();
        playerScrollPane = new javax.swing.JScrollPane();
        playerTable = new javax.swing.JTable();
        spectatorScrollPane = new javax.swing.JScrollPane();
        spectatorList = new javax.swing.JList();
        startGameButton = new javax.swing.JButton();
        turnLabel = new javax.swing.JLabel();
        playersLabel = new javax.swing.JLabel();
        spectatorsLabel = new javax.swing.JLabel();
        mainMenuButton = new javax.swing.JButton();
        currentRoomNameLabel = new javax.swing.JLabel();
        sendMessageButton = new javax.swing.JButton();
        chatLabel = new javax.swing.JLabel();
        chatScrollPane = new javax.swing.JScrollPane();
        chatTextArea = new javax.swing.JTextArea();
        messageScrollPane = new javax.swing.JScrollPane();
        messageTextArea = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        mainPanel.setPreferredSize(new java.awt.Dimension(1366, 768));
        mainPanel.setLayout(new java.awt.CardLayout());

        loginPanel.setPreferredSize(new java.awt.Dimension(1366, 768));

        enterButton.setBackground(new java.awt.Color(255, 51, 51));
        enterButton.setFont(new java.awt.Font("GrilledCheese BTN Toasted", 0, 24)); // NOI18N
        enterButton.setForeground(new java.awt.Color(255, 255, 255));
        enterButton.setText("Enter");
        enterButton.setAlignmentX(0.5F);
        enterButton.setBorder(null);
        enterButton.setBorderPainted(false);
        enterButton.setFocusPainted(false);
        enterButton.setIconTextGap(0);
        enterButton.setMargin(new java.awt.Insets(0, 0, 0, 0));
        enterButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                enterButtonMouseClicked(evt);
            }
        });

        bg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kucingvspanda/client/views/images/front_page.png"))); // NOI18N

        javax.swing.GroupLayout loginPanelLayout = new javax.swing.GroupLayout(loginPanel);
        loginPanel.setLayout(loginPanelLayout);
        loginPanelLayout.setHorizontalGroup(
            loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(loginPanelLayout.createSequentialGroup()
                .addContainerGap(479, Short.MAX_VALUE)
                .addComponent(nicknameField, javax.swing.GroupLayout.PREFERRED_SIZE, 409, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(enterButton, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(380, 380, 380))
            .addGroup(loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(loginPanelLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(bg, javax.swing.GroupLayout.PREFERRED_SIZE, 1366, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        loginPanelLayout.setVerticalGroup(
            loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(loginPanelLayout.createSequentialGroup()
                .addContainerGap(643, Short.MAX_VALUE)
                .addGroup(loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nicknameField, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(enterButton, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(84, 84, 84))
            .addGroup(loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(loginPanelLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(bg, javax.swing.GroupLayout.PREFERRED_SIZE, 768, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        mainPanel.add(loginPanel, "Login");

        mainMenuPanel.setBackground(new java.awt.Color(255, 219, 197));
        mainMenuPanel.setPreferredSize(new java.awt.Dimension(1366, 768));

        roomsLabel.setFont(new java.awt.Font("GrilledCheese BTN Toasted", 0, 48)); // NOI18N
        roomsLabel.setForeground(new java.awt.Color(255, 102, 102));
        roomsLabel.setText("Rooms");

        addRoomButton.setBackground(new java.awt.Color(255, 255, 255));
        addRoomButton.setText("Add New Room");
        addRoomButton.setBorderPainted(false);
        addRoomButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addRoomButtonMouseClicked(evt);
            }
        });
        addRoomButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addRoomButtonActionPerformed(evt);
            }
        });

        roomsScrollPane.setBackground(new java.awt.Color(255, 255, 255));
        roomsScrollPane.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 20, true));
        roomsScrollPane.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        roomsScrollPane.setPreferredSize(new java.awt.Dimension(1100, 500));

        roomsListPanel.setBackground(new java.awt.Color(255, 255, 255));
        roomsListPanel.setAlignmentX(0.0F);
        roomsListPanel.setAlignmentY(0.0F);
        roomsListPanel.setFocusable(false);
        roomsListPanel.setRequestFocusEnabled(false);

        roomTable.setFont(new java.awt.Font("Quicksand Bold", 0, 18)); // NOI18N
        roomTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        roomTable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        roomTable.setFocusable(false);
        roomTable.setMinimumSize(null);
        roomTable.setOpaque(false);
        roomTable.setPreferredSize(null);
        roomTable.setRequestFocusEnabled(false);
        roomTable.setRowHeight(35);
        roomTable.setRowMargin(0);
        roomTable.setRowSelectionAllowed(false);
        roomTable.setShowHorizontalLines(false);
        roomTable.setShowVerticalLines(false);
        ((javax.swing.table.DefaultTableCellRenderer)roomTable.getDefaultRenderer(Object.class)).setOpaque(false);

        playButtonsPanel.setBackground(new java.awt.Color(255, 255, 255));
        playButtonsPanel.setMinimumSize(new java.awt.Dimension(0, 0));
        playButtonsPanel.setPreferredSize(new java.awt.Dimension(100, 0));
        playButtonsPanel.setLayout(new java.awt.GridLayout(1, 1));

        watchButtonsPanel.setBackground(new java.awt.Color(255, 255, 255));
        watchButtonsPanel.setPreferredSize(new java.awt.Dimension(100, 0));
        watchButtonsPanel.setLayout(new java.awt.GridLayout(0, 1, 0, 2));

        javax.swing.GroupLayout roomsListPanelLayout = new javax.swing.GroupLayout(roomsListPanel);
        roomsListPanel.setLayout(roomsListPanelLayout);
        roomsListPanelLayout.setHorizontalGroup(
            roomsListPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(roomsListPanelLayout.createSequentialGroup()
                .addComponent(roomTable, javax.swing.GroupLayout.PREFERRED_SIZE, 800, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(playButtonsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(watchButtonsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39))
        );
        roomsListPanelLayout.setVerticalGroup(
            roomsListPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(roomsListPanelLayout.createSequentialGroup()
                .addGroup(roomsListPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(playButtonsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(watchButtonsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(roomTable, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 460, Short.MAX_VALUE))
        );

        roomsScrollPane.setViewportView(roomsListPanel);

        exitButton.setBackground(new java.awt.Color(255, 255, 255));
        exitButton.setText("Exit Game");
        exitButton.setBorderPainted(false);
        exitButton.setFocusPainted(false);
        exitButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                exitButtonMouseClicked(evt);
            }
        });

        gameStatusLabel.setFont(new java.awt.Font("Quicksand Bold", 0, 18)); // NOI18N
        gameStatusLabel.setForeground(new java.awt.Color(142, 130, 180));
        gameStatusLabel.setText("Status");

        roomNameLabel.setFont(new java.awt.Font("Quicksand Bold", 0, 18)); // NOI18N
        roomNameLabel.setForeground(new java.awt.Color(142, 130, 180));
        roomNameLabel.setText("Room Name");
        roomNameLabel.setIconTextGap(0);

        noOfPlayersLabel.setFont(new java.awt.Font("Quicksand Bold", 0, 18)); // NOI18N
        noOfPlayersLabel.setForeground(new java.awt.Color(142, 130, 180));
        noOfPlayersLabel.setText("No. of Players");

        currentPlayerLabel.setBackground(new java.awt.Color(255, 255, 255));
        currentPlayerLabel.setFont(new java.awt.Font("Quicksand Bold", 0, 24)); // NOI18N
        currentPlayerLabel.setForeground(new java.awt.Color(142, 130, 180));
        currentPlayerLabel.setText("Hello, !");

        highScoreButton.setText("High Score");
        highScoreButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                highScoreButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout mainMenuPanelLayout = new javax.swing.GroupLayout(mainMenuPanel);
        mainMenuPanel.setLayout(mainMenuPanelLayout);
        mainMenuPanelLayout.setHorizontalGroup(
            mainMenuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainMenuPanelLayout.createSequentialGroup()
                .addGroup(mainMenuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, mainMenuPanelLayout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(exitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(currentPlayerLabel)
                        .addGap(418, 418, 418)
                        .addComponent(roomsLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(mainMenuPanelLayout.createSequentialGroup()
                        .addContainerGap(139, Short.MAX_VALUE)
                        .addGroup(mainMenuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(roomsScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(mainMenuPanelLayout.createSequentialGroup()
                                .addComponent(roomNameLabel)
                                .addGap(445, 445, 445)
                                .addComponent(noOfPlayersLabel)
                                .addGap(43, 43, 43)
                                .addComponent(gameStatusLabel)
                                .addGap(204, 204, 204)
                                .addGroup(mainMenuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(highScoreButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(addRoomButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))
                .addGap(127, 127, 127))
        );
        mainMenuPanelLayout.setVerticalGroup(
            mainMenuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainMenuPanelLayout.createSequentialGroup()
                .addGroup(mainMenuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(mainMenuPanelLayout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addGroup(mainMenuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(exitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(currentPlayerLabel)))
                    .addGroup(mainMenuPanelLayout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(roomsLabel))
                    .addGroup(mainMenuPanelLayout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addComponent(highScoreButton, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(26, 26, 26)
                .addGroup(mainMenuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(mainMenuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(gameStatusLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(mainMenuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(roomNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(noOfPlayersLabel)))
                    .addGroup(mainMenuPanelLayout.createSequentialGroup()
                        .addComponent(addRoomButton, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(1, 1, 1)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(roomsScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(120, Short.MAX_VALUE))
        );

        exitButton.getAccessibleContext().setAccessibleDescription("");

        mainPanel.add(mainMenuPanel, "MainMenu");

        highScoreScrollPane.setViewportView(highScoreTable);

        highScoreLabel.setFont(new java.awt.Font("GrilledCheese BTN Toasted", 0, 48)); // NOI18N
        highScoreLabel.setText("High Score");

        mainMenu2Button.setText("Back to Main Menu");
        mainMenu2Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mainMenu2ButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout highScorePanelLayout = new javax.swing.GroupLayout(highScorePanel);
        highScorePanel.setLayout(highScorePanelLayout);
        highScorePanelLayout.setHorizontalGroup(
            highScorePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(highScorePanelLayout.createSequentialGroup()
                .addGroup(highScorePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(highScorePanelLayout.createSequentialGroup()
                        .addGap(299, 299, 299)
                        .addComponent(highScoreScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 700, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(highScorePanelLayout.createSequentialGroup()
                        .addGap(465, 465, 465)
                        .addComponent(highScoreLabel))
                    .addGroup(highScorePanelLayout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(mainMenu2Button)))
                .addContainerGap(367, Short.MAX_VALUE))
        );
        highScorePanelLayout.setVerticalGroup(
            highScorePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, highScorePanelLayout.createSequentialGroup()
                .addContainerGap(19, Short.MAX_VALUE)
                .addComponent(mainMenu2Button)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(highScoreLabel)
                .addGap(32, 32, 32)
                .addComponent(highScoreScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 550, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(71, 71, 71))
        );

        mainPanel.add(highScorePanel, "card5");

        roomPanel.setBackground(new java.awt.Color(204, 255, 204));
        roomPanel.setPreferredSize(new java.awt.Dimension(1366, 768));

        boardPanel.setMaximumSize(new java.awt.Dimension(700, 700));
        boardPanel.setMinimumSize(new java.awt.Dimension(700, 700));
        boardPanel.setPreferredSize(new java.awt.Dimension(700, 700));

        boardTable.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        boardTable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        boardTable.setAutoscrolls(false);
        boardTable.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        boardTable.setEnabled(false);
        boardTable.setGridColor(new java.awt.Color(102, 102, 102));
        boardTable.setMinimumSize(new java.awt.Dimension(700, 700));
        boardTable.setPreferredSize(new java.awt.Dimension(700, 700));
        boardTable.setRequestFocusEnabled(false);
        boardTable.setRowHeight(35);
        boardTable.setRowSelectionAllowed(false);
        boardTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        boardTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                boardTableMouseClicked(evt);
            }
        });

        startGameLabel.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        startGameLabel.setText("Click Start Game To Begin!");
        startGameLabel.setAlignmentX(0.5F);

        javax.swing.GroupLayout boardPanelLayout = new javax.swing.GroupLayout(boardPanel);
        boardPanel.setLayout(boardPanelLayout);
        boardPanelLayout.setHorizontalGroup(
            boardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(boardPanelLayout.createSequentialGroup()
                .addComponent(boardTable, javax.swing.GroupLayout.PREFERRED_SIZE, 700, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(350, 350, 350))
            .addGroup(boardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(boardPanelLayout.createSequentialGroup()
                    .addGap(207, 207, 207)
                    .addComponent(startGameLabel)
                    .addContainerGap(208, Short.MAX_VALUE)))
        );
        boardPanelLayout.setVerticalGroup(
            boardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(boardPanelLayout.createSequentialGroup()
                .addComponent(boardTable, javax.swing.GroupLayout.PREFERRED_SIZE, 700, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35))
            .addGroup(boardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(boardPanelLayout.createSequentialGroup()
                    .addGap(335, 335, 335)
                    .addComponent(startGameLabel)
                    .addContainerGap(336, Short.MAX_VALUE)))
        );

        boardTable.setGridColor(java.awt.Color.BLACK);

        playerScrollPane.setBackground(new java.awt.Color(255, 255, 255));
        playerScrollPane.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        playerScrollPane.setPreferredSize(new java.awt.Dimension(400, 185));

        playerTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Player", "Icon"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        playerTable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_LAST_COLUMN);
        playerTable.setFocusable(false);
        playerTable.setGridColor(new java.awt.Color(255, 255, 255));
        playerTable.setIntercellSpacing(new java.awt.Dimension(0, 0));
        playerTable.setRequestFocusEnabled(false);
        playerTable.setRowHeight(35);
        playerTable.setRowSelectionAllowed(false);
        playerTable.setShowHorizontalLines(false);
        playerTable.setShowVerticalLines(false);
        playerTable.setSurrendersFocusOnKeystroke(true);
        playerTable.setTableHeader(null);
        playerScrollPane.setViewportView(playerTable);

        spectatorScrollPane.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        spectatorScrollPane.setFocusable(false);
        spectatorScrollPane.setRequestFocusEnabled(false);
        spectatorScrollPane.setVerifyInputWhenFocusTarget(false);

        spectatorList.setFocusable(false);
        spectatorList.setRequestFocusEnabled(false);
        spectatorScrollPane.setViewportView(spectatorList);

        startGameButton.setText("Start Game");
        startGameButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                startGameButtonMouseClicked(evt);
            }
        });
        startGameButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startGameButtonActionPerformed(evt);
            }
        });

        turnLabel.setText("Your Turn!");

        playersLabel.setText("Players");

        spectatorsLabel.setText("Spectators");

        mainMenuButton.setText("Back to Main Menu");
        mainMenuButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                mainMenuButtonMouseClicked(evt);
            }
        });
        mainMenuButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mainMenuButtonActionPerformed(evt);
            }
        });

        currentRoomNameLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        currentRoomNameLabel.setText("Room Name");

        sendMessageButton.setText("Send");
        sendMessageButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendMessageButtonActionPerformed(evt);
            }
        });

        chatLabel.setText("Chat");

        chatScrollPane.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        chatScrollPane.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        chatScrollPane.setPreferredSize(new java.awt.Dimension(273, 323));

        chatTextArea.setEditable(false);
        chatTextArea.setColumns(20);
        chatTextArea.setLineWrap(true);
        chatTextArea.setRows(5);
        chatTextArea.setWrapStyleWord(true);
        chatTextArea.setPreferredSize(null);
        chatScrollPane.setViewportView(chatTextArea);

        messageScrollPane.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        messageTextArea.setColumns(1);
        messageTextArea.setLineWrap(true);
        messageTextArea.setRows(5);
        messageScrollPane.setViewportView(messageTextArea);

        javax.swing.GroupLayout roomPanelLayout = new javax.swing.GroupLayout(roomPanel);
        roomPanel.setLayout(roomPanelLayout);
        roomPanelLayout.setHorizontalGroup(
            roomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(roomPanelLayout.createSequentialGroup()
                .addComponent(boardPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 86, Short.MAX_VALUE)
                .addGroup(roomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(roomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(playersLabel)
                        .addGroup(roomPanelLayout.createSequentialGroup()
                            .addComponent(startGameButton)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(turnLabel))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, roomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(roomPanelLayout.createSequentialGroup()
                                .addComponent(currentRoomNameLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(mainMenuButton))
                            .addComponent(playerScrollPane, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(roomPanelLayout.createSequentialGroup()
                                .addComponent(spectatorScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(roomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(chatLabel)
                                    .addGroup(roomPanelLayout.createSequentialGroup()
                                        .addComponent(messageScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(sendMessageButton))
                                    .addComponent(chatScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addComponent(spectatorsLabel))
                .addGap(71, 71, 71))
        );
        roomPanelLayout.setVerticalGroup(
            roomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(roomPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(roomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mainMenuButton)
                    .addComponent(currentRoomNameLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(roomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(startGameButton)
                    .addComponent(turnLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(playersLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(playerScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(roomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(spectatorsLabel)
                    .addComponent(chatLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(roomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(roomPanelLayout.createSequentialGroup()
                        .addComponent(chatScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(roomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(messageScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(sendMessageButton, javax.swing.GroupLayout.DEFAULT_SIZE, 47, Short.MAX_VALUE)))
                    .addComponent(spectatorScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 374, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(roomPanelLayout.createSequentialGroup()
                .addComponent(boardPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 68, Short.MAX_VALUE))
        );

        mainPanel.add(roomPanel, "Room");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void enterButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_enterButtonMouseClicked
        if (!nicknameField.getText().isEmpty()) getMainMenuController().enterGame(nicknameField.getText());
        else errorMessage("Please fill in your nickname.");
    }//GEN-LAST:event_enterButtonMouseClicked

    public void addRoomDialog() {
        String roomName = JOptionPane.showInputDialog(this, "Enter room name");
        while (roomName.isEmpty()) {
            errorMessage("Please enter the room name.");
            roomName = JOptionPane.showInputDialog(this, "Enter room name");
        }
        if (roomName!=null) {
            getMainMenuController().createRoom(roomName);
        }
    }
    private void mainMenuButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mainMenuButtonActionPerformed
        getRoomController().exitGame();
    }//GEN-LAST:event_mainMenuButtonActionPerformed

    private void mainMenuButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mainMenuButtonMouseClicked

    }//GEN-LAST:event_mainMenuButtonMouseClicked

    private void boardTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_boardTableMouseClicked
        if (boardTable.isEnabled()) {
        int row = boardTable.getSelectedRow();
        int col = boardTable.getSelectedColumn();
            getBoardController().sendMove(col, row);
        }
    }//GEN-LAST:event_boardTableMouseClicked

    private void startGameButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_startGameButtonMouseClicked
        
    }//GEN-LAST:event_startGameButtonMouseClicked

    private void startGameButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startGameButtonActionPerformed
        getRoomController().requestStartGame();
    }//GEN-LAST:event_startGameButtonActionPerformed

    private void exitButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitButtonMouseClicked
        changeScreen("Login");
    }//GEN-LAST:event_exitButtonMouseClicked

    private void addRoomButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addRoomButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_addRoomButtonActionPerformed

    private void addRoomButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addRoomButtonMouseClicked
        addRoomDialog();
    }//GEN-LAST:event_addRoomButtonMouseClicked

    private void mainMenu2ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mainMenu2ButtonActionPerformed
        changeScreen("MainMenu");
    }//GEN-LAST:event_mainMenu2ButtonActionPerformed

    private void highScoreButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_highScoreButtonActionPerformed
       mainMenuController.openHighScore();
    }//GEN-LAST:event_highScoreButtonActionPerformed

    private void sendMessageButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendMessageButtonActionPerformed
        roomController.sendChat(messageTextArea.getText());
        messageTextArea.setText("");
    }//GEN-LAST:event_sendMessageButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void initLookAndFeel() {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    javax.swing.UIDefaults defaults = javax.swing.UIManager.getLookAndFeelDefaults();
                    defaults.put("Table.gridColor", new java.awt.Color (214,217,223));
                    defaults.put("Table.disabled", false);
                    defaults.put("Table.showGrid", true);
                    defaults.put("Table.intercellSpacing", new java.awt.Dimension(1, 1));
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GameFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GameFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GameFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GameFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

    }

    public void initHighScoreTable(DefaultTableModel model) {
        highScoreTable.setModel(model);
        highScoreTable.getColumnModel().getColumn(0).setPreferredWidth(100);
        highScoreTable.getColumnModel().getColumn(1).setPreferredWidth(500);
        highScoreTable.getColumnModel().getColumn(2).setPreferredWidth(100);
    }
    public void initRoomTable(DefaultTableModel model) {
        roomTable.setModel(model);
        roomTable.getColumnModel().getColumn(0).setPreferredWidth(600);
        roomTable.getColumnModel().getColumn(1).setPreferredWidth(100);
        roomTable.getColumnModel().getColumn(2).setPreferredWidth(100);
    }
    
    public void updateRoomButtons() {
        playButtons.clear();
        watchButtons.clear();
        playButtonsPanel.removeAll();
        watchButtonsPanel.removeAll();
        for (int i=0;i<roomTable.getModel().getRowCount();i++) {
            createRoomTableButtons(i);
        }
    }
    public void createRoomTableButtons(int i) {
        playButtons.put(i, new javax.swing.JButton("Play"));
            watchButtons.put(i, new javax.swing.JButton("Watch"));
            //playButtons.get(i).setBorder(BorderFactory.createCompoundBorder(playButtons.get(i).getBorder(),BorderFactory.createEmptyBorder(0,0,10,0)));
            playButtons.get(i).getAccessibleContext().setAccessibleDescription(i+"");
            watchButtons.get(i).getAccessibleContext().setAccessibleDescription(i+"");
            ((java.awt.GridLayout)playButtonsPanel.getLayout()).setRows(i+1);
            playButtonsPanel.setPreferredSize(new java.awt.Dimension(100,(i+1)*35));
            playButtonsPanel.add(playButtons.get(i));
            ((java.awt.GridLayout)watchButtonsPanel.getLayout()).setRows(i+1);
            watchButtonsPanel.setPreferredSize(new java.awt.Dimension(100,(i+1)*35));
            watchButtonsPanel.add(watchButtons.get(i));
            playButtons.get(i).addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    int no = Integer.parseInt(((javax.swing.JButton)evt.getSource()).getAccessibleContext().getAccessibleDescription());
                    getMainMenuController().play(no);
                }
            });
            watchButtons.get(i).addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    int no = Integer.parseInt(((javax.swing.JButton)evt.getSource()).getAccessibleContext().getAccessibleDescription());
                    getMainMenuController().watch(no);
                }
            });
    }
    
    public void disablePlayButton(int roomNo) {
        playButtons.get(roomNo).setEnabled(false);
    }
    
    public void enablePlayButton(int roomNo) {
        playButtons.get(roomNo).setEnabled(true);
    }
    
    public void enableStartGameButton() {
        startGameButton.setEnabled(true);
    }
    
    public void disableStartGameButton() {
        startGameButton.setEnabled(false);
    }
    
    public void changeScreen(String screenName) {
        ((java.awt.CardLayout)mainPanel.getLayout()).show(mainPanel,screenName);
    }
    
    public void initBoard(DefaultTableModel model) {
        boardTable.setModel(model);
        boardTable.setPreferredSize(new java.awt.Dimension(600,600));
        for (int i=0;i<20;i++) {
            boardTable.getColumnModel().getColumn(i).setPreferredWidth(35);
            boardTable.getColumnModel().getColumn(i).setCellRenderer(new IconRenderer());
        }
    }
    
    public void setRoomName(String name) {
        currentRoomNameLabel.setText(name);
    }
    

    public void initPlayerTable(DefaultTableModel model) {
        playerTable.setModel(model);
        playerTable.getColumnModel().getColumn(0).setPreferredWidth(350);
        playerTable.getColumnModel().getColumn(1).setCellRenderer(new IconRenderer());
    }
    
    public void initSpectatorList(javax.swing.DefaultListModel model) {
        spectatorList.setModel(model);
    }
    
    public void enableBoard() {
        boardTable.setEnabled(true);
    }
    
    public void disableBoard() {
        boardTable.setEnabled(false);
    }
    
    public void hideStartGameLabel() {
        startGameLabel.setVisible(false);
    }
    
    public void showStartGameLabel() {
        startGameLabel.setVisible(true);
    }

    public void errorMessage(String message) {
        JOptionPane.showMessageDialog(this,message,"Oops!",JOptionPane.ERROR_MESSAGE);
    }
    
    public void setCurrentPlayer(String nickname) {
        currentPlayerLabel.setText("Hello, "+nickname+"!");
    }
    
    public void setTurnLabel(String message) {
        turnLabel.setText(message);
    }
    
    public void endGameDialog(String title,String message) {
        int choice = JOptionPane.showConfirmDialog(this,message,title,JOptionPane.YES_NO_OPTION);
        if (choice==JOptionPane.NO_OPTION) {
            roomController.exitGame();
        }
    }
    
    public void appendChat(String newchat) {
        chatTextArea.append(newchat+"\n");
    }
    
    private final MainMenuController mainMenuController;
    private final RoomController roomController;
    private final BoardController boardController;
    private java.util.Map<Integer,String> iconAssets = new java.util.HashMap<>();
    private java.util.Map<Integer,javax.swing.JButton> playButtons = new java.util.HashMap<>();
    private java.util.Map<Integer,javax.swing.JButton> watchButtons = new java.util.HashMap<>();
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addRoomButton;
    private javax.swing.JLabel bg;
    private javax.swing.JPanel boardPanel;
    private javax.swing.JTable boardTable;
    private javax.swing.JLabel chatLabel;
    private javax.swing.JScrollPane chatScrollPane;
    private javax.swing.JTextArea chatTextArea;
    private javax.swing.JLabel currentPlayerLabel;
    private javax.swing.JLabel currentRoomNameLabel;
    private javax.swing.JButton enterButton;
    private javax.swing.JButton exitButton;
    private javax.swing.JLabel gameStatusLabel;
    private javax.swing.JButton highScoreButton;
    private javax.swing.JLabel highScoreLabel;
    private javax.swing.JPanel highScorePanel;
    private javax.swing.JScrollPane highScoreScrollPane;
    private javax.swing.JTable highScoreTable;
    private java.awt.List list1;
    private javax.swing.JPanel loginPanel;
    private javax.swing.JButton mainMenu2Button;
    private javax.swing.JButton mainMenuButton;
    private javax.swing.JPanel mainMenuPanel;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JScrollPane messageScrollPane;
    private javax.swing.JTextArea messageTextArea;
    private javax.swing.JTextField nicknameField;
    private javax.swing.JLabel noOfPlayersLabel;
    private javax.swing.JPanel playButtonsPanel;
    private javax.swing.JScrollPane playerScrollPane;
    private javax.swing.JTable playerTable;
    private javax.swing.JLabel playersLabel;
    private javax.swing.JLabel roomNameLabel;
    private javax.swing.JPanel roomPanel;
    private javax.swing.JTable roomTable;
    private javax.swing.JLabel roomsLabel;
    private javax.swing.JPanel roomsListPanel;
    private javax.swing.JScrollPane roomsScrollPane;
    private javax.swing.JButton sendMessageButton;
    private javax.swing.JList spectatorList;
    private javax.swing.JScrollPane spectatorScrollPane;
    private javax.swing.JLabel spectatorsLabel;
    private javax.swing.JButton startGameButton;
    private javax.swing.JLabel startGameLabel;
    private javax.swing.JLabel turnLabel;
    private javax.swing.JPanel watchButtonsPanel;
    // End of variables declaration//GEN-END:variables

    public MainMenuController getMainMenuController() {
        return mainMenuController;
    }

    public RoomController getRoomController() {
        return roomController;
    }

    public BoardController getBoardController() {
        return boardController;
    }

}

class IconRenderer extends DefaultTableCellRenderer {
  JLabel lbl = new JLabel();
  java.util.Map<Integer,String> iconMap = new java.util.HashMap<>();
  ImageIcon icon;

  public IconRenderer() {
      iconMap.put(-1,"images/block_empty.png");
      iconMap.put(0,"images/block_0.png");
      iconMap.put(1,"images/block_1.png");
      iconMap.put(2,"images/block_2.png");
      iconMap.put(3,"images/block_3.png");
      iconMap.put(4,"images/block_4.png");
      iconMap.put(5,"images/block_5.png");
      iconMap.put(6,"images/block_0_win.png");
      iconMap.put(7,"images/block_1_win.png");
      iconMap.put(8,"images/block_2_win.png");
      iconMap.put(9,"images/block_3_win.png");
      iconMap.put(10,"images/block_4_win.png");
      iconMap.put(11,"images/block_5_win.png");
  }
  public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected,
      boolean hasFocus, int row, int column) {
      if (value!=null){
    icon = new ImageIcon(getClass().getResource(iconMap.get(value)));
    java.awt.Image img = icon.getImage() ;  
    java.awt.Image newimg = img.getScaledInstance(35, 35,  java.awt.Image.SCALE_SMOOTH ) ;  
    icon = new ImageIcon(newimg);
    lbl.setIcon(icon);
    return lbl;
  } else {
          lbl.setIcon(null);
          return lbl;
      }
  }
}