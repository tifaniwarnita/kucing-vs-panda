/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gomokuclient.views;

import gomokuclient.controllers.*;
import javax.swing.table.*;
import javax.swing.BorderFactory;
import javax.swing.JLabel;
import javax.swing.ImageIcon;
import java.awt.Component;
import javax.swing.JTable;
/**
 *
 * @author ASUS X202E
 */
public class GameFrame extends javax.swing.JFrame {

    /**
     * Creates new form GameFrame
     */
    public GameFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPanel = new javax.swing.JPanel();
        loginPanel = new javax.swing.JPanel();
        nicknameField = new javax.swing.JTextField();
        enterButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        mainMenuPanel = new javax.swing.JPanel();
        roomsLabel = new javax.swing.JLabel();
        addRoomButton = new javax.swing.JButton();
        roomsScrollPane = new javax.swing.JScrollPane();
        roomsListPanel = new javax.swing.JPanel();
        roomTable = new javax.swing.JTable();
        playButtonsPanel = new javax.swing.JPanel();
        watchButtonsPanel = new javax.swing.JPanel();
        exitButton = new javax.swing.JButton();
        gameStatusLabel = new javax.swing.JLabel();
        roomNameLabel = new javax.swing.JLabel();
        noOfPlayersLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        roomPanel = new javax.swing.JPanel();
        //
        boardPanel = new javax.swing.JPanel();
        boardTable = new javax.swing.JTable();
        playerScrollPane = new javax.swing.JScrollPane();
        playerTable = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        spectatorList = new java.awt.List();
        startGameButton = new javax.swing.JButton();
        turnLabel = new javax.swing.JLabel();
        playersLabel = new javax.swing.JLabel();
        spectatorsLabel = new javax.swing.JLabel();
        mainMenuButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        mainPanel.setLayout(new java.awt.CardLayout());

        enterButton.setText("Enter");
        enterButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                enterButtonMouseClicked(evt);
            }
        });

        jLabel2.setText("Nickname:");

        javax.swing.GroupLayout loginPanelLayout = new javax.swing.GroupLayout(loginPanel);
        loginPanel.setLayout(loginPanelLayout);
        loginPanelLayout.setHorizontalGroup(
            loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, loginPanelLayout.createSequentialGroup()
                .addContainerGap(331, Short.MAX_VALUE)
                .addGroup(loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addGroup(loginPanelLayout.createSequentialGroup()
                        .addComponent(nicknameField, javax.swing.GroupLayout.PREFERRED_SIZE, 378, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(41, 41, 41)
                        .addComponent(enterButton, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(277, 277, 277))
        );
        loginPanelLayout.setVerticalGroup(
            loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, loginPanelLayout.createSequentialGroup()
                .addContainerGap(461, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(enterButton, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nicknameField, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(118, 118, 118))
        );

        mainPanel.add(loginPanel, "Login");

        roomsLabel.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        roomsLabel.setText("Rooms");

        addRoomButton.setText("Add New Room");
        addRoomButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addRoomButtonActionPerformed(evt);
            }
        });

        roomsScrollPane.setPreferredSize(new java.awt.Dimension(1000, 402));

        roomsListPanel.setPreferredSize(new java.awt.Dimension(1000, 400));

        roomTable.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        roomTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        roomTable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        roomTable.setFocusable(false);
        roomTable.setMinimumSize(new java.awt.Dimension(200, 160));
        roomTable.setOpaque(false);
        roomTable.setPreferredSize(new java.awt.Dimension(800, 400));
        roomTable.setRequestFocusEnabled(false);
        roomTable.setRowHeight(35);
        roomTable.setRowMargin(0);
        roomTable.setRowSelectionAllowed(false);
        roomTable.setShowHorizontalLines(false);
        roomTable.setShowVerticalLines(false);
        ((javax.swing.table.DefaultTableCellRenderer)roomTable.getDefaultRenderer(Object.class)).setOpaque(false);

        playButtonsPanel.setMinimumSize(new java.awt.Dimension(0, 0));
        playButtonsPanel.setPreferredSize(new java.awt.Dimension(100, 0));
        playButtonsPanel.setLayout(new java.awt.GridLayout(1, 1));

        watchButtonsPanel.setPreferredSize(new java.awt.Dimension(100, 0));
        watchButtonsPanel.setLayout(new java.awt.GridLayout(0, 1, 0, 2));

        javax.swing.GroupLayout roomsListPanelLayout = new javax.swing.GroupLayout(roomsListPanel);
        roomsListPanel.setLayout(roomsListPanelLayout);
        roomsListPanelLayout.setHorizontalGroup(
            roomsListPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(roomsListPanelLayout.createSequentialGroup()
                .addComponent(roomTable, javax.swing.GroupLayout.PREFERRED_SIZE, 800, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(playButtonsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(watchButtonsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39))
        );
        roomsListPanelLayout.setVerticalGroup(
            roomsListPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(roomTable, javax.swing.GroupLayout.DEFAULT_SIZE, 414, Short.MAX_VALUE)
            .addGroup(roomsListPanelLayout.createSequentialGroup()
                .addGroup(roomsListPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(playButtonsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(watchButtonsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        roomsScrollPane.setViewportView(roomsListPanel);

        exitButton.setText("Exit");
        exitButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                exitButtonMouseClicked(evt);
            }
        });

        gameStatusLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        gameStatusLabel.setText("Status");

        roomNameLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        roomNameLabel.setText("Room Name");

        noOfPlayersLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        noOfPlayersLabel1.setText("No. of Players");

        jButton1.setText("High Score");

        javax.swing.GroupLayout mainMenuPanelLayout = new javax.swing.GroupLayout(mainMenuPanel);
        mainMenuPanel.setLayout(mainMenuPanelLayout);
        mainMenuPanelLayout.setHorizontalGroup(
            mainMenuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainMenuPanelLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(mainMenuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(mainMenuPanelLayout.createSequentialGroup()
                        .addComponent(roomNameLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(noOfPlayersLabel1)
                        .addGap(31, 31, 31)
                        .addComponent(gameStatusLabel)
                        .addGap(363, 363, 363))
                    .addGroup(mainMenuPanelLayout.createSequentialGroup()
                        .addGroup(mainMenuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(exitButton)
                            .addComponent(roomsScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 1061, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(mainMenuPanelLayout.createSequentialGroup()
                                .addComponent(roomsLabel)
                                .addGap(33, 33, 33)
                                .addComponent(addRoomButton)
                                .addGap(61, 61, 61)
                                .addComponent(jButton1)))
                        .addContainerGap(59, Short.MAX_VALUE))))
        );
        mainMenuPanelLayout.setVerticalGroup(
            mainMenuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainMenuPanelLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(exitButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(mainMenuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(roomsLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(addRoomButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(40, 40, 40)
                .addGroup(mainMenuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(gameStatusLabel)
                    .addComponent(noOfPlayersLabel1)
                    .addComponent(roomNameLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(roomsScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 416, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(82, Short.MAX_VALUE))
        );

        exitButton.getAccessibleContext().setAccessibleDescription("");

        mainPanel.add(mainMenuPanel, "MainMenu");

        boardPanel.setMinimumSize(new java.awt.Dimension(500, 500));
        boardPanel.setPreferredSize(new java.awt.Dimension(500, 500));

        boardTable.setAlignmentX(0.0F);
        boardTable.setAlignmentY(0.0F);
        boardTable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        boardTable.setRowSelectionAllowed(false);
        boardTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        boardPanel.add(boardTable);

        playerTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Player", "Icon"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        playerScrollPane.setViewportView(playerTable);

        jScrollPane3.setViewportView(spectatorList);

        startGameButton.setText("Start Game");

        turnLabel.setText("Turn: You");

        playersLabel.setText("Players");

        spectatorsLabel.setText("Spectators");

        mainMenuButton.setText("Back to Main Menu");
        mainMenuButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                mainMenuButtonMouseClicked(evt);
            }
        });
        mainMenuButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mainMenuButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout roomPanelLayout = new javax.swing.GroupLayout(roomPanel);
        roomPanel.setLayout(roomPanelLayout);
        roomPanelLayout.setHorizontalGroup(
            roomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(roomPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(boardPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 600, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 3, Short.MAX_VALUE)
                .addGroup(roomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(roomPanelLayout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addGroup(roomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(spectatorsLabel)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 466, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(roomPanelLayout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addGroup(roomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(playersLabel)
                            .addGroup(roomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(roomPanelLayout.createSequentialGroup()
                                    .addComponent(startGameButton)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(turnLabel)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(mainMenuButton))
                                .addComponent(playerScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 464, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(24, 24, 24))
        );
        roomPanelLayout.setVerticalGroup(
            roomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(roomPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(roomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(roomPanelLayout.createSequentialGroup()
                        .addGroup(roomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(startGameButton)
                            .addComponent(turnLabel)
                            .addComponent(mainMenuButton))
                        .addGap(18, 18, 18)
                        .addComponent(playersLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(playerScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 311, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(spectatorsLabel)
                        .addGap(5, 5, 5)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29))
                    .addGroup(roomPanelLayout.createSequentialGroup()
                        .addComponent(boardPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())))
        );

        mainPanel.add(roomPanel, "Room");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addRoomButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addRoomButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_addRoomButtonActionPerformed

    private void enterButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_enterButtonMouseClicked
        mainMenuController.enterGame();
    }//GEN-LAST:event_enterButtonMouseClicked

    private void exitButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitButtonMouseClicked
        mainMenuController.test();
    }//GEN-LAST:event_exitButtonMouseClicked

    private void mainMenuButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mainMenuButtonActionPerformed
        roomController.exit();
    }//GEN-LAST:event_mainMenuButtonActionPerformed

    private void mainMenuButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mainMenuButtonMouseClicked
       
    }//GEN-LAST:event_mainMenuButtonMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void init() {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GameFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GameFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GameFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GameFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GameFrame().setVisible(true);
            }
        });
    }

    public void initRoomTable(DefaultTableModel model) {
        roomTable.setModel(model);
        roomTable.getColumnModel().getColumn(0).setPreferredWidth(600);
        roomTable.getColumnModel().getColumn(1).setPreferredWidth(100);
        roomTable.getColumnModel().getColumn(2).setPreferredWidth(100);
        for (int i=0;i<model.getRowCount();i++) {
            createRoomTableButtons(i);
        }
    }
    
    public void createRoomTableButtons(int i) {
        playButtons.put(i, new javax.swing.JButton("Play"));
            watchButtons.put(i, new javax.swing.JButton("Watch"));
            //playButtons.get(i).setBorder(BorderFactory.createCompoundBorder(playButtons.get(i).getBorder(),BorderFactory.createEmptyBorder(0,0,10,0)));
            playButtons.get(i).getAccessibleContext().setAccessibleDescription(i+"");
            watchButtons.get(i).getAccessibleContext().setAccessibleDescription(i+"");
            ((java.awt.GridLayout)playButtonsPanel.getLayout()).setRows(i+1);
            playButtonsPanel.setPreferredSize(new java.awt.Dimension(100,(i+1)*35));
            playButtonsPanel.add(playButtons.get(i));
            ((java.awt.GridLayout)watchButtonsPanel.getLayout()).setRows(i+1);
            watchButtonsPanel.setPreferredSize(new java.awt.Dimension(100,(i+1)*35));
            watchButtonsPanel.add(watchButtons.get(i));
            playButtons.get(i).addMouseListener(new java.awt.event.MouseAdapter() {
                public void mouseClicked(java.awt.event.MouseEvent evt) {
                    javax.swing.JButton button = (javax.swing.JButton)evt.getSource();
                    int no = Integer.parseInt(button.getAccessibleContext().getAccessibleDescription());
                    mainMenuController.play(no);
                }
            });
            watchButtons.get(i).addMouseListener(new java.awt.event.MouseAdapter() {
                public void mouseClicked(java.awt.event.MouseEvent evt) {
                    javax.swing.JButton button = (javax.swing.JButton)evt.getSource();
                    int no = Integer.parseInt(button.getAccessibleContext().getAccessibleDescription());
                    mainMenuController.play(no);
                }
            });
    }
    
    public void disablePlayButton(int roomNo) {
        playButtons.get(roomNo).setEnabled(false);
    }
    
    public void enablePlayButton(int roomNo) {
        playButtons.get(roomNo).setEnabled(true);
    }
    
    public void changeScreen(String screenName) {
        ((java.awt.CardLayout)mainPanel.getLayout()).show(mainPanel,screenName);
    }
    
    public void initBoard(DefaultTableModel model) {
        boardTable.setModel(model);
        /*for (int i=0;i<19;i++) {
            boardTable.getColumnModel().getColumn(i).setCellRenderer(new IconRenderer());
        }*/
    }
    
    public void test() {
        boardController.test();
    }
    
    private final BoardController boardController = new BoardController(this);
    private final MainMenuController mainMenuController = new MainMenuController(this);
    private final RoomController roomController = new RoomController(this);
    private java.util.Map<Integer,String> iconAssets = new java.util.HashMap<>();
    private java.util.Map<Integer,javax.swing.JButton> playButtons = new java.util.HashMap<>();
    private java.util.Map<Integer,javax.swing.JButton> watchButtons = new java.util.HashMap<>();
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addRoomButton;
    private javax.swing.JPanel boardPanel;
    private javax.swing.JTable boardTable;
    private javax.swing.JButton enterButton;
    private javax.swing.JButton exitButton;
    private javax.swing.JLabel gameStatusLabel;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JPanel loginPanel;
    private javax.swing.JButton mainMenuButton;
    private javax.swing.JPanel mainMenuPanel;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JTextField nicknameField;
    private javax.swing.JLabel noOfPlayersLabel1;
    private javax.swing.JPanel playButtonsPanel;
    private javax.swing.JScrollPane playerScrollPane;
    private javax.swing.JTable playerTable;
    private javax.swing.JLabel playersLabel;
    private javax.swing.JLabel roomNameLabel;
    private javax.swing.JPanel roomPanel;
    private javax.swing.JTable roomTable;
    private javax.swing.JLabel roomsLabel;
    private javax.swing.JPanel roomsListPanel;
    private javax.swing.JScrollPane roomsScrollPane;
    private java.awt.List spectatorList;
    private javax.swing.JLabel spectatorsLabel;
    private javax.swing.JButton startGameButton;
    private javax.swing.JLabel turnLabel;
    private javax.swing.JPanel watchButtonsPanel;
    // End of variables declaration//GEN-END:variables

}

class IconRenderer extends DefaultTableCellRenderer {
  JLabel lbl = new JLabel();
  java.util.Map<Integer,String> iconMap = new java.util.HashMap<>();
  ImageIcon icon;

  public IconRenderer() {
      iconMap.put(1,"images/test.png");
      iconMap.put(2,"images/test2.png");
  }
  public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected,
      boolean hasFocus, int row, int column) {
      if ((int)value!=-1) {
    icon = new ImageIcon(getClass().getResource(iconMap.get(value)));
    java.awt.Image img = icon.getImage() ;  
    java.awt.Image newimg = img.getScaledInstance(20, 20,  java.awt.Image.SCALE_SMOOTH ) ;  
    icon = new ImageIcon(newimg);
    lbl.setIcon(icon);
      }
      return lbl;
  }
}
