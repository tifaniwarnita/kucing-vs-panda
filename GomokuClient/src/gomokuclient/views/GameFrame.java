/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gomokuclient.views;

import gomokuclient.controllers.*;
import javax.swing.table.*;
import javax.swing.JLabel;
import javax.swing.ImageIcon;
import java.awt.Component;
import javax.swing.JTable;
/**
 *
 * @author ASUS X202E
 */
public class GameFrame extends javax.swing.JFrame {

    /**
     * Creates new form GameFrame
     */
    public GameFrame() {
        initComponents();
        mainMenuController = new MainMenuController(this);
        roomController = mainMenuController.getRoomController();
        boardController = roomController.getBoardController();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPanel = new javax.swing.JPanel();
        loginPanel = new javax.swing.JPanel();
        nicknameField = new javax.swing.JTextField();
        enterButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        mainMenuPanel = new javax.swing.JPanel();
        roomsLabel = new javax.swing.JLabel();
        addRoomButton = new javax.swing.JButton();
        roomsScrollPane = new javax.swing.JScrollPane();
        roomsListPanel = new javax.swing.JPanel();
        roomTable = new javax.swing.JTable();
        playButtonsPanel = new javax.swing.JPanel();
        watchButtonsPanel = new javax.swing.JPanel();
        exitButton = new javax.swing.JButton();
        gameStatusLabel = new javax.swing.JLabel();
        roomNameLabel = new javax.swing.JLabel();
        noOfPlayersLabel1 = new javax.swing.JLabel();
        currentPlayerLabel = new javax.swing.JLabel();
        roomPanel = new javax.swing.JPanel();
        //
        boardPanel = new javax.swing.JPanel();
        startGameLabel = new javax.swing.JLabel();
        boardTable = new javax.swing.JTable();
        playerScrollPane = new javax.swing.JScrollPane();
        playerTable = new javax.swing.JTable();
        spectatorScrollPane = new javax.swing.JScrollPane();
        spectatorList = new java.awt.List();
        startGameButton = new javax.swing.JButton();
        turnLabel = new javax.swing.JLabel();
        playersLabel = new javax.swing.JLabel();
        spectatorsLabel = new javax.swing.JLabel();
        mainMenuButton = new javax.swing.JButton();
        currentRoomNameLabel = new javax.swing.JLabel();
        textArea1 = new java.awt.TextArea();
        textField1 = new java.awt.TextField();
        jButton2 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(1366, 768));

        mainPanel.setPreferredSize(new java.awt.Dimension(1366, 768));
        mainPanel.setLayout(new java.awt.CardLayout());

        loginPanel.setPreferredSize(new java.awt.Dimension(1366, 768));

        enterButton.setText("Enter");
        enterButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                enterButtonMouseClicked(evt);
            }
        });

        jLabel2.setText("Nickname:");

        javax.swing.GroupLayout loginPanelLayout = new javax.swing.GroupLayout(loginPanel);
        loginPanel.setLayout(loginPanelLayout);
        loginPanelLayout.setHorizontalGroup(
            loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, loginPanelLayout.createSequentialGroup()
                .addContainerGap(490, Short.MAX_VALUE)
                .addGroup(loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addGroup(loginPanelLayout.createSequentialGroup()
                        .addComponent(nicknameField, javax.swing.GroupLayout.PREFERRED_SIZE, 378, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(41, 41, 41)
                        .addComponent(enterButton, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(343, 343, 343))
        );
        loginPanelLayout.setVerticalGroup(
            loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, loginPanelLayout.createSequentialGroup()
                .addContainerGap(579, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(enterButton, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nicknameField, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(118, 118, 118))
        );

        mainPanel.add(loginPanel, "Login");

        mainMenuPanel.setPreferredSize(new java.awt.Dimension(1366, 768));

        roomsLabel.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        roomsLabel.setText("Rooms");

        addRoomButton.setText("Add New Room");
        addRoomButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addRoomButtonMouseClicked(evt);
            }
        });
        addRoomButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addRoomButtonActionPerformed(evt);
            }
        });

        roomsScrollPane.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        roomsScrollPane.setPreferredSize(new java.awt.Dimension(1000, 400));

        roomTable.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        roomTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        roomTable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        roomTable.setFocusable(false);
        roomTable.setMinimumSize(null);
        roomTable.setOpaque(false);
        roomTable.setPreferredSize(null);
        roomTable.setRequestFocusEnabled(false);
        roomTable.setRowHeight(35);
        roomTable.setRowMargin(0);
        roomTable.setRowSelectionAllowed(false);
        roomTable.setShowHorizontalLines(false);
        roomTable.setShowVerticalLines(false);
        ((javax.swing.table.DefaultTableCellRenderer)roomTable.getDefaultRenderer(Object.class)).setOpaque(false);

        playButtonsPanel.setMinimumSize(new java.awt.Dimension(0, 0));
        playButtonsPanel.setPreferredSize(new java.awt.Dimension(100, 0));
        playButtonsPanel.setLayout(new java.awt.GridLayout(1, 1));

        watchButtonsPanel.setPreferredSize(new java.awt.Dimension(100, 0));
        watchButtonsPanel.setLayout(new java.awt.GridLayout(0, 1, 0, 2));

        javax.swing.GroupLayout roomsListPanelLayout = new javax.swing.GroupLayout(roomsListPanel);
        roomsListPanel.setLayout(roomsListPanelLayout);
        roomsListPanelLayout.setHorizontalGroup(
            roomsListPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(roomsListPanelLayout.createSequentialGroup()
                .addComponent(roomTable, javax.swing.GroupLayout.PREFERRED_SIZE, 800, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(playButtonsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(watchButtonsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39))
        );
        roomsListPanelLayout.setVerticalGroup(
            roomsListPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(roomsListPanelLayout.createSequentialGroup()
                .addGroup(roomsListPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(playButtonsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(watchButtonsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(roomTable, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        roomsScrollPane.setViewportView(roomsListPanel);

        exitButton.setText("Exit Game");
        exitButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                exitButtonMouseClicked(evt);
            }
        });

        gameStatusLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        gameStatusLabel.setText("Status");

        roomNameLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        roomNameLabel.setText("Room Name");

        noOfPlayersLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        noOfPlayersLabel1.setText("No. of Players");

        currentPlayerLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        currentPlayerLabel.setText("Hello, !");

        javax.swing.GroupLayout mainMenuPanelLayout = new javax.swing.GroupLayout(mainMenuPanel);
        mainMenuPanel.setLayout(mainMenuPanelLayout);
        mainMenuPanelLayout.setHorizontalGroup(
            mainMenuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainMenuPanelLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(mainMenuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(mainMenuPanelLayout.createSequentialGroup()
                        .addComponent(roomNameLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(noOfPlayersLabel1)
                        .addGap(52, 52, 52)
                        .addComponent(gameStatusLabel)
                        .addGap(581, 581, 581))
                    .addGroup(mainMenuPanelLayout.createSequentialGroup()
                        .addGroup(mainMenuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(mainMenuPanelLayout.createSequentialGroup()
                                .addGroup(mainMenuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(exitButton)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainMenuPanelLayout.createSequentialGroup()
                                        .addComponent(roomsLabel)
                                        .addGap(20, 20, 20)))
                                .addGap(15, 15, 15)
                                .addGroup(mainMenuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(addRoomButton)
                                    .addComponent(currentPlayerLabel)))
                            .addComponent(roomsScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 1050, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(295, Short.MAX_VALUE))))
        );
        mainMenuPanelLayout.setVerticalGroup(
            mainMenuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainMenuPanelLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(mainMenuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(exitButton)
                    .addComponent(currentPlayerLabel))
                .addGap(33, 33, 33)
                .addGroup(mainMenuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(roomsLabel)
                    .addComponent(addRoomButton, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(mainMenuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(gameStatusLabel)
                    .addComponent(noOfPlayersLabel1)
                    .addComponent(roomNameLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(roomsScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(116, Short.MAX_VALUE))
        );

        exitButton.getAccessibleContext().setAccessibleDescription("");

        mainPanel.add(mainMenuPanel, "MainMenu");

        roomPanel.setPreferredSize(new java.awt.Dimension(1366, 768));

        boardPanel.setMaximumSize(new java.awt.Dimension(700, 700));
        boardPanel.setMinimumSize(new java.awt.Dimension(700, 700));
        boardPanel.setPreferredSize(new java.awt.Dimension(700, 700));
        boardPanel.setLayout(new javax.swing.OverlayLayout(boardPanel));

        startGameLabel.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        startGameLabel.setText("Click Start Game To Begin!");
        startGameLabel.setAlignmentX(0.5F);
        boardPanel.add(startGameLabel);

        boardTable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        boardTable.setColumnSelectionAllowed(false);
        boardTable.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        boardTable.setEnabled(false);
        boardTable.setFillsViewportHeight(true);
        boardTable.setFocusable(false);
        boardTable.setIntercellSpacing(new java.awt.Dimension(0, 0));
        boardTable.setMinimumSize(new java.awt.Dimension(700, 700));
        boardTable.setPreferredSize(new java.awt.Dimension(700, 700));
        boardTable.setRequestFocusEnabled(false);
        boardTable.setRowHeight(35);
        boardTable.setRowMargin(0);
        boardTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        boardTable.setShowHorizontalLines(false);
        boardTable.setShowVerticalLines(false);
        boardTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                boardTableMouseClicked(evt);
            }
        });
        boardPanel.add(boardTable);

        playerTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Player", "Icon"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        playerTable.setRowHeight(35);
        playerTable.setShowHorizontalLines(false);
        playerTable.setShowVerticalLines(false);
        playerScrollPane.setViewportView(playerTable);

        spectatorScrollPane.setViewportView(spectatorList);

        startGameButton.setText("Start Game");
        startGameButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                startGameButtonMouseClicked(evt);
            }
        });
        startGameButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startGameButtonActionPerformed(evt);
            }
        });

        turnLabel.setText("Your Turn!");

        playersLabel.setText("Players");

        spectatorsLabel.setText("Spectators");

        mainMenuButton.setText("Back to Main Menu");
        mainMenuButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                mainMenuButtonMouseClicked(evt);
            }
        });
        mainMenuButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mainMenuButtonActionPerformed(evt);
            }
        });

        currentRoomNameLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        currentRoomNameLabel.setText("Room Name");

        jButton2.setText("Send");

        jLabel3.setText("Chat");

        javax.swing.GroupLayout roomPanelLayout = new javax.swing.GroupLayout(roomPanel);
        roomPanel.setLayout(roomPanelLayout);
        roomPanelLayout.setHorizontalGroup(
            roomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(roomPanelLayout.createSequentialGroup()
                .addComponent(boardPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 137, Short.MAX_VALUE)
                .addGroup(roomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(roomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(playersLabel)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, roomPanelLayout.createSequentialGroup()
                            .addComponent(currentRoomNameLabel)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(mainMenuButton))
                        .addGroup(roomPanelLayout.createSequentialGroup()
                            .addComponent(startGameButton)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(turnLabel))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, roomPanelLayout.createSequentialGroup()
                            .addGroup(roomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(playerScrollPane, javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(roomPanelLayout.createSequentialGroup()
                                    .addComponent(spectatorScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(roomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel3)
                                        .addComponent(textArea1, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(roomPanelLayout.createSequentialGroup()
                                            .addComponent(textField1, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(jButton2)))))
                            .addGap(10, 10, 10)))
                    .addComponent(spectatorsLabel))
                .addContainerGap())
        );
        roomPanelLayout.setVerticalGroup(
            roomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(roomPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(roomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mainMenuButton)
                    .addComponent(currentRoomNameLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(roomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(startGameButton)
                    .addComponent(turnLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(playersLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(playerScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(roomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(spectatorsLabel)
                    .addComponent(jLabel3))
                .addGap(12, 12, 12)
                .addGroup(roomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(roomPanelLayout.createSequentialGroup()
                        .addComponent(textArea1, javax.swing.GroupLayout.PREFERRED_SIZE, 324, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(roomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(textField1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton2, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addComponent(spectatorScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 374, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(roomPanelLayout.createSequentialGroup()
                .addComponent(boardPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 68, Short.MAX_VALUE))
        );

        mainPanel.add(roomPanel, "Room");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 1271, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 749, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addRoomButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addRoomButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_addRoomButtonActionPerformed

    private void enterButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_enterButtonMouseClicked
        if (!nicknameField.getText().isEmpty()) mainMenuController.enterGame(nicknameField.getText());
        else errorMessage("Please fill in your nickname.");
    }//GEN-LAST:event_enterButtonMouseClicked

    private void exitButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitButtonMouseClicked
        changeScreen("Login");
    }//GEN-LAST:event_exitButtonMouseClicked

    private void addRoomButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addRoomButtonMouseClicked
        addRoomDialog();
    }//GEN-LAST:event_addRoomButtonMouseClicked

    public void addRoomDialog() {
        String roomName = javax.swing.JOptionPane.showInputDialog(this, "Enter room name");
        while (roomName.isEmpty()) {
            errorMessage("Please enter the room name.");
            roomName = javax.swing.JOptionPane.showInputDialog(this, "Enter room name");
        }
        if (roomName!=null) {
            mainMenuController.createRoom(roomName);
        }
    }
    private void mainMenuButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mainMenuButtonActionPerformed
        roomController.exitGame();
    }//GEN-LAST:event_mainMenuButtonActionPerformed

    private void mainMenuButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mainMenuButtonMouseClicked

    }//GEN-LAST:event_mainMenuButtonMouseClicked

    private void boardTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_boardTableMouseClicked
        int row = boardTable.getSelectedRow();
        int col = boardTable.getSelectedColumn();
        boardController.sendMove(row, col); 
    }//GEN-LAST:event_boardTableMouseClicked

    private void startGameButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_startGameButtonMouseClicked
        
    }//GEN-LAST:event_startGameButtonMouseClicked

    private void startGameButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startGameButtonActionPerformed
        roomController.requestStartGame();
    }//GEN-LAST:event_startGameButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void init() {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GameFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GameFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GameFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GameFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GameFrame().setVisible(true);
            }
        });
    }

    public void initRoomTable(DefaultTableModel model) {
        roomTable.setModel(model);
        roomTable.getColumnModel().getColumn(0).setPreferredWidth(600);
        roomTable.getColumnModel().getColumn(1).setPreferredWidth(100);
        roomTable.getColumnModel().getColumn(2).setPreferredWidth(100);
    }
    
    public void updateRoomButtons() {
        playButtons.clear();
        watchButtons.clear();
        playButtonsPanel.removeAll();
        watchButtonsPanel.removeAll();
        for (int i=0;i<roomTable.getModel().getRowCount();i++) {
            createRoomTableButtons(i);
        }
    }
    public void createRoomTableButtons(int i) {
        playButtons.put(i, new javax.swing.JButton("Play"));
            watchButtons.put(i, new javax.swing.JButton("Watch"));
            //playButtons.get(i).setBorder(BorderFactory.createCompoundBorder(playButtons.get(i).getBorder(),BorderFactory.createEmptyBorder(0,0,10,0)));
            playButtons.get(i).getAccessibleContext().setAccessibleDescription(i+"");
            watchButtons.get(i).getAccessibleContext().setAccessibleDescription(i+"");
            ((java.awt.GridLayout)playButtonsPanel.getLayout()).setRows(i+1);
            playButtonsPanel.setPreferredSize(new java.awt.Dimension(100,(i+1)*35));
            playButtonsPanel.add(playButtons.get(i));
            ((java.awt.GridLayout)watchButtonsPanel.getLayout()).setRows(i+1);
            watchButtonsPanel.setPreferredSize(new java.awt.Dimension(100,(i+1)*35));
            watchButtonsPanel.add(watchButtons.get(i));
            playButtons.get(i).addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    int no = Integer.parseInt(((javax.swing.JButton)evt.getSource()).getAccessibleContext().getAccessibleDescription());
                    mainMenuController.play(no);
                }
            });
            watchButtons.get(i).addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    int no = Integer.parseInt(((javax.swing.JButton)evt.getSource()).getAccessibleContext().getAccessibleDescription());
                    mainMenuController.play(no);
                }
            });
    }
    
    public void disablePlayButton(int roomNo) {
        playButtons.get(roomNo).setEnabled(false);
    }
    
    public void enablePlayButton(int roomNo) {
        playButtons.get(roomNo).setEnabled(true);
    }
    
    public void enableStartGameButton() {
        startGameButton.setEnabled(true);
    }
    
    public void disableStartGameButton() {
        startGameButton.setEnabled(false);
    }
    
    public void changeScreen(String screenName) {
        ((java.awt.CardLayout)mainPanel.getLayout()).show(mainPanel,screenName);
    }
    
    public void initBoard(DefaultTableModel model) {
        boardTable.setModel(model);
        boardTable.setPreferredSize(new java.awt.Dimension(600,600));
        for (int i=0;i<20;i++) {
            boardTable.getColumnModel().getColumn(i).setPreferredWidth(35);
            boardTable.getColumnModel().getColumn(i).setCellRenderer(new IconRenderer());
        }
    }
    
    public void setRoomName(String name) {
        currentRoomNameLabel.setText(name);
    }
    

    public void initPlayerTable(DefaultTableModel model) {
        playerTable.setModel(model);
        playerTable.getColumnModel().getColumn(0).setPreferredWidth(350);
        playerTable.getColumnModel().getColumn(1).setCellRenderer(new IconRenderer());
    }
    
    public void initSpectatorList(java.util.List<String> spectators) {
        for (String spectator : spectators) {
            spectatorList.add(spectator);
        }
    }
    
    public void addSpectatorList(String spectator) {
        spectatorList.add(spectator);
    }
    
    public void removeSpectatorList(String spectator) {
        spectatorList.remove(spectator);
    }
    
    public void enableBoard() {
        boardTable.setEnabled(true);
        startGameLabel.setVisible(false);
    }
    
    public void disableBoard() {
        boardTable.setEnabled(false);
        startGameLabel.setVisible(true);
    }

    public void errorMessage(String message) {
        javax.swing.JOptionPane.showMessageDialog(this,message,"Oops!",javax.swing.JOptionPane.ERROR_MESSAGE);
    }
    
    public void setCurrentPlayer(String nickname) {
        currentPlayerLabel.setText("Hello, "+nickname+"!");
    }
    
    public void setTurnLabel(String message) {
        turnLabel.setText(message);
    }
    
    private final MainMenuController mainMenuController;
    private final RoomController roomController;
    private final BoardController boardController;
    private java.util.Map<Integer,String> iconAssets = new java.util.HashMap<>();
    private java.util.Map<Integer,javax.swing.JButton> playButtons = new java.util.HashMap<>();
    private java.util.Map<Integer,javax.swing.JButton> watchButtons = new java.util.HashMap<>();
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addRoomButton;
    private javax.swing.JPanel boardPanel;
    private javax.swing.JTable boardTable;
    private javax.swing.JLabel currentPlayerLabel;
    private javax.swing.JLabel currentRoomNameLabel;
    private javax.swing.JButton enterButton;
    private javax.swing.JButton exitButton;
    private javax.swing.JLabel gameStatusLabel;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel loginPanel;
    private javax.swing.JButton mainMenuButton;
    private javax.swing.JPanel mainMenuPanel;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JTextField nicknameField;
    private javax.swing.JLabel noOfPlayersLabel1;
    private javax.swing.JPanel playButtonsPanel;
    private javax.swing.JScrollPane playerScrollPane;
    private javax.swing.JTable playerTable;
    private javax.swing.JLabel playersLabel;
    private javax.swing.JLabel roomNameLabel;
    private javax.swing.JPanel roomPanel;
    private javax.swing.JTable roomTable;
    private javax.swing.JLabel roomsLabel;
    private javax.swing.JPanel roomsListPanel;
    private javax.swing.JScrollPane roomsScrollPane;
    private java.awt.List spectatorList;
    private javax.swing.JScrollPane spectatorScrollPane;
    private javax.swing.JLabel spectatorsLabel;
    private javax.swing.JButton startGameButton;
    private javax.swing.JLabel startGameLabel;
    private java.awt.TextArea textArea1;
    private java.awt.TextField textField1;
    private javax.swing.JLabel turnLabel;
    private javax.swing.JPanel watchButtonsPanel;
    // End of variables declaration//GEN-END:variables

}

class IconRenderer extends DefaultTableCellRenderer {
  JLabel lbl = new JLabel();
  java.util.Map<Integer,String> iconMap = new java.util.HashMap<>();
  ImageIcon icon;

  public IconRenderer() {
      iconMap.put(0,"images/test.png");
      iconMap.put(1,"images/test1.png");
  }
  public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected,
      boolean hasFocus, int row, int column) {
      if (value!=null) {
    icon = new ImageIcon(getClass().getResource(iconMap.get(value)));
    java.awt.Image img = icon.getImage() ;  
    java.awt.Image newimg = img.getScaledInstance(20, 20,  java.awt.Image.SCALE_SMOOTH ) ;  
    icon = new ImageIcon(newimg);
    lbl.setIcon(icon);
      } else lbl.setIcon(null);
      return lbl;
  }
}
